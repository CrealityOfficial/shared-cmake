set(PROJECT_VERSION_MAJOR)
set(PROJECT_VERSION_MINOR)
set(PROJECT_VERSION_PATCH)
set(PROJECT_BUILD_ID)
set(PROJECT_VERSION_EXTRA)
if(NOT (${PROJECT_VERSION_MAJOR} MATCHES "^[0-9]*$"))
	set(PROJECT_VERSION_MAJOR 0)
	set(PROJECT_VERSION_MINOR 0)
	set(PROJECT_VERSION_PATCH 1)
	set(PROJECT_BUILD_ID 0)
	set(PROJECT_VERSION_EXTRA "Alpha")
endif()

message(STATUS "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}")
__build_info_header()


if(APPLE)
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/install/)
elseif(WIN32)
	SET(CMAKE_INSTALL_PREFIX ${CMAKE_BINARY_DIR}/../install/)
endif()

message(STATUS "CMAKE INSTALL PREFIX ${CMAKE_INSTALL_PREFIX}")

macro(__package_project)
	if(WIN32)
		INSTALL(DIRECTORY "${LIB_OUTPUT_DIR}" DESTINATION . FILES_MATCHING PATTERN "*.lib")
		if(EXISTS ${BIN_OUTPUT_DIR})
			INSTALL(DIRECTORY "${BIN_OUTPUT_DIR}" DESTINATION . FILES_MATCHING PATTERN "*.dll")
			INSTALL(DIRECTORY "${BIN_OUTPUT_DIR}" DESTINATION . FILES_MATCHING PATTERN "*.pdb")
		endif()
	else()
		INSTALL(DIRECTORY "${LIB_OUTPUT_DIR}" DESTINATION . )
		if(EXISTS ${BIN_OUTPUT_DIR})
			message("install ${BIN_OUTPUT_DIR}")
			INSTALL(DIRECTORY "${BIN_OUTPUT_DIR}" DESTINATION . )
		endif()
	endif()

    set(PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.0")
    set(CPACK_GENERATOR "NSIS")
    set(CPACK_PACKAGE_VERSION_MAJOR "${PROJECT_VERSION_MAJOR}")
    set(CPACK_PACKAGE_VERSION_MINOR "${PROJECT_VERSION_MINOR}")
    set(CPACK_PACKAGE_VERSION_PATCH "${PROJECT_VERSION_PATCH}")
    set(CPACK_PACKAGE_VERSION "${PROJECT_VERSION}")
	set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
    set(CPACK_PACKAGE_EXECUTABLES "${PROJECT_NAME}" "${PROJECT_NAME}")
    set(CPACK_PACKAGE_INSTALL_DIRECTORY "${PROJECT_NAME}")
		
    include(CPack)
endmacro()